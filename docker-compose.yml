version: '3.8'

services:
  vllm:
    image: vllm/vllm-openai:latest
    container_name: vllm-server
    ports:
      - "8000:8000"
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    command: >
      --enable-lora
      --model unsloth/gemma-3-12b-it-bnb-4bit
      --lora-modules seen-language=anhdtd/gemma-3-12b-textDetox-2025-seen-language
                     unseen-language=anhdtd/gemma-3-12b-textDetox-2025-unseen-language
    shm_size: '8gb'
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    networks:
      - llm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 20
      start_period: 60s

  fastapi-service:
    build:
      context: ./infernce
      dockerfile: Dockerfile
    container_name: fastapi-detox-service
    ports:
      - "8080:8080"
    environment:
      - vLLM_API=vllm
      - GCP_PROJECT_ID=meta-triode-457409-a9
    depends_on:
      vllm:
        condition: service_healthy
    networks:
      - llm-network
    volumes:
      - ./infernce:/app
      - ./credentials.json:/app/credentials.json:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-service
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - llm-network
    # depends_on:
    #   - vllm
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-service
    ports:
      - "5000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    networks:
      - llm-network
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  data-shift-monitor:
    build:
      context: ./data-shift-monitor
      dockerfile: Dockerfile
    container_name: data-shift-monitor-service
    ports:
      - "8081:8081"
    environment:
      - GCP_PROJECT_ID=meta-triode-457409-a9
    networks:
      - llm-network
    volumes:
      - ./data-shift-monitor:/app
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  llm-network:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
  prometheus-storage:
    driver: local
